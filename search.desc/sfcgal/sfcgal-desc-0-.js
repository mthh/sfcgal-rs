searchState.loadedDescShard("sfcgal", 0, "Rust bindings providing a high-level API to <code>SFCGAL</code> library …\nRepresent the buffer types usable with the <code>buffer3d</code> method.\nCoordinates corresponding to the shapes described by …\nContains the error value\nConversion from GeoJson to SFCGAL Geometries.\nSFCGAL Geometry types.\nA Geometrycollection is described by a Vec of any of these …\nA Linestring is described by Vec of Point.\nA Multilinestring is described by a Vec of Linestrings.\nA Multipoint is described by a Vec of Points.\nA Multipolygon is described by a Vec of Polygons.\nA Multisolid is described by a Vec of Solids.\nContains the success value\nRepresents the orientation of a <code>SFCGeometry</code>.\nA Point is described by a tuple of 2 or 3 coordinates.\nType alias for manipulating 2d coordinates, represented as …\nType alias for manipulating 3d coordinates, represented as …\nA Polygon is described by a Vec of closed Linestring : the …\nA Polyhedralsurface is described by a Vec of Polygons.\nType alias for <code>Result</code> with the error type set to <code>Error</code>.\nObject representing a SFCGAL Geometry.\nA Solid is described by a Vec of Polyhedralsurfaces : the …\nConvert object to a <code>CoordSeq</code> holding coordinates and …\nConversion from SFCGAL Geometries to GeoJson.\nConvert object to a <code>SFCGeometry</code> (implemented on <code>CoordSeq</code> …\nA Triangle is described by a Vec of 3 Points.\nA Triangulatedsurface is described by a Vec of Triangles.\nConversion from <code>SFCGeometry</code> (implemented on geo-types …\nReturns the SFCGAL type of the given <code>SFCGeometry</code>.\nReturns the alpha shape of the given <code>SFCGeometry</code> Point set.\nReturns the approximal convex partition of a geometry …\nReturns the approximate medial axis for the given …\nComputes the area of the given <code>SFCGeometry</code>.\nComputes the 3d area of the given <code>SFCGeometry</code>.\nComputes a 3D buffer around a geometry\nReturns the convex hull of the given <code>SFCGeometry</code>.\nReturns the 3d convex hull of the given <code>SFCGeometry</code>.\nTest if the geometry covers an other <code>SFCGeometry</code>.\nTest if the geometry covers an other <code>SFCGeometry</code> in 3D.\nCreate a SFCGeometry collection type (MultiPoint, …\nReturns the difference of the given <code>SFCGeometry</code> to an other\nReturns the 3d difference of the given <code>SFCGeometry</code> to an …\nComputes the distance to an other <code>SFCGeometry</code>.\nComputes the 3d distance to an other <code>SFCGeometry</code>.\nReturns the extrusion of the given <code>SFCGeometry</code> (not …\nReturns the union of the polygon z-extrusion (with respect …\nReturns the extrude straight skeleton of the given Polygon.\nForce a Left Handed Rule on the given Geometry\nForce a Right Handed Rule on the given Geometry\nSets the validity flag of the geometry.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the members of a SFCGeometry. Returns Err if the …\nReturns the greene approximal convex partition of a …\nGets the validity flag of the geometry\nReturns the intersection of the given <code>SFCGeometry</code> to an …\nReturns the 3d intersection of the given <code>SFCGeometry</code> to an …\nTest the intersection with an other <code>SFCGeometry</code>.\nTest the 3d intersection with an other <code>SFCGeometry</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRead the binary prepared geometry\nRead the binary prepared geometry\nRead the binary prepared geometry\nSafety\nTest if the given <code>SFCGeometry</code> is a 3d geometry or not.\nTest if the given <code>SFCGeometry</code> is empty or not.\nTest if the given <code>SFCGeometry</code> is measured (has an ‘m’ …\nTest if the given <code>SFCGeometry</code> is planar or not.\nTest if the given <code>SFCGeometry</code> is valid or not.\nReturns the substring of the given <code>SFCGeometry</code> LineString …\nAdds a point to a LineString\nCreates an empty LineString\nReturns the number of points of the given LineString\nReturns the ith point of a given LineString\nConvert a PolyhedralSurface to a Solid\nReturns the minkowski sum of the given <code>SFCGeometry</code> and an …\nCreates an empty MultiSolid\nCreate a geometry by parsing a WKT string.\nReturns the offset polygon of the given <code>SFCGeometry</code>.\nReturn the optimal alpha shape of the given <code>SFCGeometry</code> …\nReturns the optimal convex partition of a geometry …\nComputes the orientation of the given <code>SFCGeometry</code> (must be …\nCreates an empty point\nCreates a point from two X and Y coordinates\nCreates a point from three X, Y and M coordinates\nCreates a point from three X, Y and Z coordinates\nCreate a point from x, y, z, m components.\nReturns the M coordinate of the given Point\nReturns the X coordinate of the given Point\nReturns the Y coordinate of the given Point\nReturns the Z coordinate of the given Point\nAdds an interior ring to a given Polygon\nCreates an empty Polygon\nCreates an empty Polygon from an extrior ring\nReturns the exterior ring of a given Polygon\nReturns the ith interior ring of a given Polygon\nReturns the number of interior rings of a given Polygon\nAdds a Polygon to a given PolyhedralSurface\nCreates an empty PolyhedralSurface\nReturns the number of polygons of a given PolyhedralSurface\nReturns the ith polygon of a given PolyhedralSurface\nCreates an empty PreparedGeometry\nSafety\nSafety\nSafety\nSafety\nSafety\nSafety\nRotates a geometry around the origin (0,0,0) by a given …\nRotates a geometry around a specified point by a given …\nRotates a 3D geometry around a specified axis by a given …\nRotates a 3D geometry around a specified axis and center …\nRotates a geometry around the X axis by a given angle\nRotates a geometry around the Y axis by a given angle\nRotates a geometry around the Z axis by a given angle\nRound coordinates of the given Geometry\nScale a geometry by a given factor\nScale a geometry by different factors for each dimension\nScale a geometry by different factors for each dimension …\nSets the error handlers. These callbacks are called on …\nSets the error handlers. These callbacks are called on …\nSet the geometry validation mode\nAdds a shell to a given Solid\nCreates an empty Solid\nCreates a Solid from an exterior shell\nReturns the number of shells of a given Solid\nReturns the ith shell of a given Solid\nReturns the straight skeleton of the given <code>SFCGeometry</code>.\nReturns the straight skeleton of the given <code>SFCGeometry</code> …\nReturns the straight skeleton partition for the given …\nReturns a tesselation of the given <code>SFCGeometry</code>.\nSafety\nCreates a Hexwkb string of the given geometry. In memory …\nCreates a OBJ file of the given geometry\nCreates a OBJ string of the given geometry. In memory …\nConvert the coordinates of this <code>CoordSeq</code> to <code>SFCGeometry</code>.\nCreates a VTK file of the given geometry\nCreates a VTK string of the given geometry. In memory …\nCreates a Wkb string of the given geometry. In memory …\nReturns a WKT representation of the given <code>SFCGeometry</code> …\nReturns a WKT representation of the given <code>SFCGeometry</code> using\nTranslate a geometry by a 2D vector\nTranslate a geometry by a 3D vector\nCreates an empty Triangle\nCreates a Triangle from three given Point\nSets one vertex of a Triangle\nSets one vertex of a Triangle from two coordinates\nSets one vertex of a Triangle from three coordinates\nReturns one the Triangle’s vertex as a Point\nReturns a triangulation of the given <code>SFCGeometry</code>.\nAdds a Triangle to a given TriangulatedSurface\nCreates an empty TriangulatedSurface\nReturns the number of triangles of a given …\nReturns the ith Triangle of a given TriangulatedSurface\nReturns the union of the given <code>SFCGeometry</code> to an other …\nReturns the 3d union of the given <code>SFCGeometry</code> to an other …\nReturns reason for the invalidity or None in case of …\nDisplay SFCGAL version information.\nReturns the visibility polygon of a Point inside a Polygon\nBuild the visibility polygon of the segment [pointA ; …\nComputes the volume of the given <code>SFCGeometry</code> (must be a …\nReturns the y monotone partition of a geometry (polygon …")